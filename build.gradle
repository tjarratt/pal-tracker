buildscript {
    ext {
        springBootVersion = "2.0.6.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}


plugins {
    id "java"
}

apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")

    compile("mysql:mysql-connector-java:8.0.15")

    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.mockito:mockito-core:2.23.4")
}

bootRun.environment([
     "WELCOME_MESSAGE": "hello"
])

springBoot {
    buildInfo()
}

def developmentDbUrl = "jdbc:mysql://localhost:3306/tracker_dev?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
bootRun.environment([
        "WELCOME_MESSAGE": "hello",
        "SPRING_DATASOURCE_URL": developmentDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
])

def testDbUrl = "jdbc:mysql://localhost:3306/tracker_test?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
test.environment([
        "WELCOME_MESSAGE": "Hello from test",
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
])
